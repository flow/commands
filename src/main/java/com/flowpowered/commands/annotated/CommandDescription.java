/*
 * This file is part of Flow Commands, licensed under the MIT License (MIT).
 *
 * Copyright (c) 2013 Flow Powered <https://flowpowered.com/>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.flowpowered.commands.annotated;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * This allows for annotation-based command registration.
 */
@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
public @interface CommandDescription {
    /**
     * Returns the name of the command.
     *
     * @return name of command
     */
    public String name();

    /**
     * Returns the proper usage of the command.
     *
     * @return proper usage
     */
    public String usage() default "";

    /**
     * Returns a short, one-line description of the command.
     *
     * @return description of the command
     */
    public String desc() default "";

    /**
     * Returns a long (possibly multi-line) help information about the command and its behavior.
     *
     * @return a long help information
     */
    public String help() default "";

    /**
     * Whether the command should be added as a child with an autogenerated name to a parent command supplied to the {@link AnnotatedCommandExecutorFactory factory} or the root command.
     * <p>
     * The child name is autogenerated by truncating the {@link #name() unique name} of the command. See {@link com.flowpowered.commands.Command#getSimpleName(String) Command.getSimpleName(String)}.
     *
     * @return whether should be automatically added as child
     */
    public boolean autoParent() default true;

}
